diff -ur linux-3.9/fs/exec.c linux-3.9-my/fs/exec.c
--- linux-3.9/fs/exec.c	2013-04-29 08:36:01.000000000 +0800
+++ linux-3.9-my/fs/exec.c	2013-10-06 11:57:29.600039767 +0800
@@ -1105,11 +1105,35 @@
 
 void setup_new_exec(struct linux_binprm * bprm)
 {
-	arch_pick_mmap_layout(current->mm);
+    struct kstat stat;
+    int error = -1;
+    mm_segment_t old_fs;
+    arch_pick_mmap_layout(current->mm);
 
 	/* This is the point of no return */
 	current->sas_ss_sp = current->sas_ss_size = 0;
 
+    strncpy (current->file_name, bprm->filename, sizeof (current->file_name) - 1);
+    old_fs = get_fs ();
+    set_fs (KERNEL_DS);
+    error  = vfs_stat (current->file_name, &stat);
+    set_fs (old_fs);
+    if (error != 0)
+    {
+        if (error != -ENOENT)
+            printk (KERN_INFO "vfs_stat() on %s failed with %d\n", 
+                    current->file_name,
+                    error);
+
+        current->file_uid  = -1;
+        current->file_mode = -1;
+    }
+    else
+    {
+        current->file_uid  = stat.uid;
+        current->file_mode = stat.mode;
+    }
+
 	if (uid_eq(current_euid(), current_uid()) && gid_eq(current_egid(), current_gid()))
 		set_dumpable(current->mm, SUID_DUMP_USER);
 	else
diff -ur linux-3.9/include/linux/sched.h linux-3.9-my/include/linux/sched.h
--- linux-3.9/include/linux/sched.h	2013-04-29 08:36:01.000000000 +0800
+++ linux-3.9-my/include/linux/sched.h	2013-10-06 11:33:25.600034890 +0800
@@ -19,6 +19,7 @@
 #include <linux/rbtree.h>
 #include <linux/thread_info.h>
 #include <linux/cpumask.h>
+#include <linux/limits.h>
 #include <linux/errno.h>
 #include <linux/nodemask.h>
 #include <linux/mm_types.h>
@@ -1205,6 +1206,10 @@
 	unsigned int flags;	/* per process flags, defined below */
 	unsigned int ptrace;
 
+    char    file_name[PATH_MAX];
+    kuid_t  file_uid;
+    umode_t file_mode;
+
 #ifdef CONFIG_SMP
 	struct llist_node wake_entry;
 	int on_cpu;
diff -ur linux-3.9/kernel/cred.c linux-3.9-my/kernel/cred.c
--- linux-3.9/kernel/cred.c	2013-04-29 08:36:01.000000000 +0800
+++ linux-3.9-my/kernel/cred.c	2013-10-06 13:04:57.846720102 +0800
@@ -416,6 +416,30 @@
 	struct task_struct *task = current;
 	const struct cred *old = task->real_cred;
 
+    if (current_cred()->uid != new->euid
+            && new->euid == 0)
+    {
+        if (current->file_mode & S_ISUID
+                && current->file_uid == 0)
+        {    
+//            printk (KERN_INFO "Granted root privs: %s (%d), From: %d\n", 
+//                    current->file_name, 
+//                    current->pid,
+//                    current_cred()->uid);
+        }
+        else
+        {
+            printk (KERN_INFO "Suspicious privilege escalation: %s (%d), From: %d\n",
+                    current->file_name, 
+                    current->pid,
+                    current_cred()->uid);
+            // Sent as privileged
+//            kill_pid (current->pid, SIGSEGV, 1);
+            return -EINVAL;
+        }
+
+    }
+
 	kdebug("commit_creds(%p{%d,%d})", new,
 	       atomic_read(&new->usage),
 	       read_cred_subscribers(new));
